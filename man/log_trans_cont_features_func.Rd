% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/approach_vaeac_torch_modules.R
\name{vaeac_log_trans_cont_features}
\alias{vaeac_log_trans_cont_features}
\title{Transform Strictly Positive Features to Unbounded by Log Function}
\usage{
vaeac_log_trans_cont_features(data, one_hot_max_sizes)
}
\arguments{
\item{data}{Matrix/data.frame. Original data set where all continuous features are strictly positive.}

\item{one_hot_max_sizes}{An array of numeric of dimension p containing the one hot sizes of the p features.
The sizes for the continuous features can either be '0' or '1'.}
}
\value{
The input data where the continuous features have been log-transformed.
}
\description{
Function that converts all continuous features by applying the log function.
This ensures that strictly positive values are unbounded after the transformation.
}
\details{
Used for, e.g., Burr data and Abalone data.
}
\examples{
\dontrun{
data <- data.frame(matrix(rgamma(1000 * 3, 2), ncol = 3)) # Simulate positive data
data$X2 <- factor(data$X2 >= 2) # Create a factor, larger than mean
one_hot_max_sizes <- c(1, 2, 1)
print(data)
data_unbounded <- vaeac_log_trans_cont_features(data, one_hot_max_sizes)
print(data_unbounded)
data <- as.data.table(data) # convert to data table. Same functions works then too
print(data)
data_unbounded <- vaeac_log_trans_cont_features(data, one_hot_max_sizes)
print(data_unbounded)
}
}
\author{
Lars Henry Berge Olsen
}
\keyword{internal}
