% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/approach_vaeac_torch_modules.R
\name{CategoricalToOneHotLayer}
\alias{CategoricalToOneHotLayer}
\title{A \link[torch:nn_module]{torch::nn_module} Representing a CategoricalToOneHotLayer}
\usage{
CategoricalToOneHotLayer(one_hot_max_sizes, add_nans_map_for_columns = NULL)
}
\arguments{
\item{one_hot_max_sizes}{A vector of integers where the i-th entry is the number of
one-hot encoding for the i-th feature.
I.e., a categorical feature with 5 levels will have a one_hot_max_size of 5.
A feature with a one_hot_max_size of either 0 or 1 will be treated as a continuous feature.}

\item{add_nans_map_for_columns}{Optional list which contains indices of columns which
is_nan masks are to be appended to the result tensor. This option is necessary for the full
encoder to distinguish whether value is to be reconstructed or not.}
}
\description{
The CategoricalToOneHotLayer module/layer expands categorical features into one-hot vectors,
because multi-layer perceptrons are known to work better with this data representation.
It also replaces NaNs with zeros in order so that further layers may work correctly.
}
\details{
Note that the module works with mixed data represented as 2-dimensional inputs and it
works correctly with missing values in \code{groundtruth} as long as they are repsented by NaNs.
}
\author{
Lars Henry Berge Olsen
}
\keyword{internal}
