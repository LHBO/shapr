% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/asymmetric_and_casual_Shapley.R
\name{sort_feature_list}
\alias{sort_feature_list}
\title{Sort the list of features}
\usage{
sort_feature_list(
  features_list,
  sort_features = TRUE,
  sort_size = TRUE,
  sort_coalitions = TRUE
)
}
\arguments{
\item{sort_features}{Logical. If \code{TRUE} (default), then we sort the features in each coalition.}

\item{sort_size}{Logical. If \code{TRUE} (default), then we sort the \code{features_list} based on the coalition sizes.}

\item{sort_coalitions}{Logical. If \code{TRUE} (default), then we sort the coalitions of equal size in \code{features_list}
based on the feature indices. Note that the features in each coalition must be sorted for this to work.
The user either has to do this prior or set \code{sort_features = TRUE}.}

\item{feature_list}{List of positive integer vectors of variable size.}
}
\description{
The function sort a list of positive integer vectors of variable size by first
sorting the elements in each vector in increasing order (if \code{sort_features = TRUE}),
then sorts the whole list based on the vector lengths (if \code{sort_size = TRUE}),
and for vectors of the same length, the function sort based on the coalitions indices
(if \code{sort_coalitions = TRUE}), i.e., vector \code{c(1,2,3)} comes before \code{c(1,3,4)}.
}
\examples{
sort_feature_list(list(3, 1, c(101, 7, 111), c(7, 101, 1), c(7, 99, 111), c(2, 1), c(1, 101)))
}
\author{
Lars Henry Berge Olsen
}
\keyword{internal}
